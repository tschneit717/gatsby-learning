{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/pages/slicemasters.js"],"names":["PaginationStyles","styled","div","Pagination","pageSize","totalCount","currentPage","base","skip","totalPages","Math","ceil","prevPage","nextPage","hasNextPage","hasPrevPage","disabled","to","Array","from","length","map","_","i","className","SliceMastersGrid","SliceMastersStyles","SlicemastersPage","data","pageContext","slicemasters","nodes","SEO","title","parseInt","process","person","key","id","slug","current","name","fluid","image","asset","description","query"],"mappings":"sPAIMA,EAAmBC,IAAOC,IAAV,mFAAGD,CAAH,mVAyBP,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,SACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,YAEAC,GACC,EAFDC,KAEC,EADDD,MAEME,EAAaC,KAAKC,KAAKN,EAAaD,GACpCQ,EAAWN,EAAc,EACzBO,EAAWP,EAAc,EACzBQ,EAAcD,GAAYJ,EAC1BM,EAAcT,GAAe,EACnC,OACE,kBAACN,EAAD,KACE,kBAAC,IAAD,CACEgB,UAAWD,EACXE,GAAOV,EAAL,KAAaK,EAAW,EAAIA,EAAW,KAF3C,UAKCM,MAAMC,KAAK,CAAEC,OAAQX,IAAcY,KAAI,SAACC,EAAGC,GAAJ,OACtC,kBAAC,IAAD,CACEC,UAA2B,IAAhBlB,GAA2B,IAANiB,EAAU,UAAY,GACtDN,GAAOV,EAAL,KAAagB,EAAI,EAAIA,EAAI,EAAI,KAC9BA,EAAI,MAGT,kBAAC,IAAD,CAAMP,UAAWF,EAAaG,GAAOV,EAAL,IAAaM,GAA7C,W,gBChDAY,EAAmBxB,IAAOC,IAAV,qFAAGD,CAAH,sFAMhByB,EAAqBzB,IAAOC,IAAV,uFAAGD,CAAH,gWA4BT,SAAS0B,EAAT,GAAkD,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACzCC,EAAeF,EAAKE,aAAaC,MACvC,OACE,oCACE,kBAACC,EAAA,EAAD,CAAKC,MAAK,wBAAyBJ,EAAYvB,aAAe,KAC9D,kBAACH,EAAD,CACEC,SAAU8B,SAASC,KACnB9B,WAAYuB,EAAKE,aAAazB,WAC9BC,YAAauB,EAAYvB,aAAe,EACxCE,KAAMqB,EAAYrB,KAClBD,KAAK,kBAEP,kBAACkB,EAAD,KACGK,EAAaT,KAAI,SAACe,GAAD,OAChB,kBAACV,EAAD,CAAoBW,IAAKD,EAAOE,IAC9B,kBAAC,IAAD,CAAMrB,GAAE,iBAAmBmB,EAAOG,KAAKC,SACrC,4BACE,0BAAMhB,UAAU,QAAQY,EAAOK,QAGnC,kBAAC,IAAD,CAAKC,MAAON,EAAOO,MAAMC,MAAMF,QAC/B,uBAAGlB,UAAU,eAAeY,EAAOS,mBAQxC,IAAMC,EAAK","file":"component---src-pages-slicemasters-js-f4077c548f222cfb14e4.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst PaginationStyles = styled.div`\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  border: 1px solid var(--grey);\n  margin: 2rem 0;\n  border-radius: 5px;\n  text-align: center;\n  & > * {\n    padding: 1rem;\n    flex: 1;\n    border-right: 1px solid var(--grey);\n    text-decoration: none;\n    &[aria-current],\n    &.current {\n      color: var(--red);\n    }\n    &[disabled] {\n      pointer-events: none;\n      color: var(--gray);\n    }\n  }\n`;\n\nexport default function Pagination({\n  pageSize,\n  totalCount,\n  currentPage,\n  skip,\n  base,\n}) {\n  const totalPages = Math.ceil(totalCount / pageSize);\n  const prevPage = currentPage - 1;\n  const nextPage = currentPage + 1;\n  const hasNextPage = nextPage >= totalPages;\n  const hasPrevPage = currentPage >= 1;\n  return (\n    <PaginationStyles>\n      <Link\n        disabled={!hasPrevPage}\n        to={`${base}/${prevPage > 1 ? prevPage : ''}`}>\n        ← Prev\n      </Link>\n      {Array.from({ length: totalPages }).map((_, i) => (\n        <Link\n          className={currentPage === 1 && i === 0 ? 'current' : ''}\n          to={`${base}/${i > 0 ? i + 1 : ''}`}>\n          {i + 1}\n        </Link>\n      ))}\n      <Link disabled={!hasNextPage} to={`${base}/${nextPage}`}>\n        Next →\n      </Link>\n    </PaginationStyles>\n  );\n}\n","import { graphql, Link } from 'gatsby';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\nimport Pagination from '../components/Pagination';\nimport SEO from '../components/SEO';\n\nconst SliceMastersGrid = styled.div`\n  display: grid;\n  gap: 2rem;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n`;\n\nconst SliceMastersStyles = styled.div`\n  a {\n    text-decoration: none;\n  }\n  .gatsby-image-wrapper {\n    width: 100%;\n    height: 400px;\n    object-fit: cover;\n  }\n  h2 {\n    transform: rotate(-2deg);\n    text-align: center;\n    font-size: 4rem;\n    margin-bottom: -2rem;\n    position: relative;\n    z-index: 2;\n  }\n  .description {\n    background: var(--yellow);\n    padding: 1rem;\n    margin: -6rem 2rem 2rem 2rem;\n    z-index: 3;\n    position: relative;\n    transform: rotate(1deg);\n    text-align: center;\n  }\n`;\n\nexport default function SlicemastersPage({ data, pageContext }) {\n  const slicemasters = data.slicemasters.nodes;\n  return (\n    <>\n      <SEO title={`Slicemasters - Page ${pageContext.currentPage || 1}`} />\n      <Pagination\n        pageSize={parseInt(process.env.GATSBY_PAGE_SIZE)}\n        totalCount={data.slicemasters.totalCount}\n        currentPage={pageContext.currentPage || 1}\n        skip={pageContext.skip}\n        base=\"/slicemasters\"\n      />\n      <SliceMastersGrid>\n        {slicemasters.map((person) => (\n          <SliceMastersStyles key={person.id}>\n            <Link to={`/slicemasters/${person.slug.current}`}>\n              <h2>\n                <span className=\"mark\">{person.name}</span>\n              </h2>\n            </Link>\n            <Img fluid={person.image.asset.fluid} />\n            <p className=\"description\">{person.description}</p>\n          </SliceMastersStyles>\n        ))}\n      </SliceMastersGrid>\n    </>\n  );\n}\n\nexport const query = graphql`\n  query {\n    slicemasters: allSanityPerson {\n      totalCount\n      nodes {\n        name\n        id\n        slug {\n          current\n        }\n        description\n        image {\n          asset {\n            fluid(maxWidth: 410) {\n              ...GatsbySanityImageFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}